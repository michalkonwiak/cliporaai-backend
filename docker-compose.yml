services:
  backend:
    build: .
    container_name: cliporaai-backend
    env_file: .env
    command: uv run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    volumes:
      - ./:/app:rw
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3

  celery_worker:
    build: .
    container_name: cliporaai-celery
    env_file: .env
    command: uv run celery -A app.core.celery_app worker --loglevel=info
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    volumes:
      - ./:/app:rw

  redis:
    image: redis:7-alpine
    container_name: cliporaai-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  db:
    image: postgres:17
    container_name: cliporaai-postgres
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:

networks:
  default:
    driver: bridge
