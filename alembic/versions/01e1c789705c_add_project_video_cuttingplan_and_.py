"""Add Project, Video, CuttingPlan and ExportJob models

Revision ID: 01e1c789705c
Revises: 4f69ea0c1593
Create Date: 2025-07-26 18:07:03.345536

"""

from alembic import op  # type: ignore
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "01e1c789705c"
down_revision = "4f69ea0c1593"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "projects",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "project_type",
            sa.Enum(
                "DYNAMIC",
                "CINEMATIC",
                "DOCUMENTARY",
                "SOCIAL",
                "CUSTOM",
                name="projecttype",
                native_enum=False,
            ),
            nullable=True,
        ),
        sa.Column(
            "status",
            sa.Enum(
                "DRAFT",
                "PROCESSING",
                "COMPLETED",
                "FAILED",
                "EXPORTED",
                name="projectstatus",
                native_enum=False,
            ),
            nullable=True,
        ),
        sa.Column("timeline_data", sa.JSON(), nullable=True),
        sa.Column("total_duration", sa.Float(), nullable=True),
        sa.Column("processing_progress", sa.Float(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_projects_id"), "projects", ["id"], unique=False)
    op.create_table(
        "videos",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("filename", sa.String(), nullable=False),
        sa.Column("original_filename", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("file_path", sa.String(length=500), nullable=False),
        sa.Column("file_size", sa.BigInteger(), nullable=False),
        sa.Column("mime_type", sa.String(length=100), nullable=False),
        sa.Column("duration", sa.Float(), nullable=False),
        sa.Column("width", sa.Integer(), nullable=False),
        sa.Column("height", sa.Integer(), nullable=False),
        sa.Column("fps", sa.Float(), nullable=False),
        sa.Column(
            "codec",
            sa.Enum("H264", "H265", "VP9", "AV1", name="videocodec", native_enum=False),
            nullable=False,
        ),
        sa.Column("bitrate", sa.Integer(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "UPLOADING",
                "UPLOADED",
                "PROCESSING",
                "ANALYZED",
                "FAILED",
                name="videostatus",
                native_enum=False,
            ),
            nullable=True,
        ),
        sa.Column("analysis_data", sa.JSON(), nullable=True),
        sa.Column("scene_cuts", sa.JSON(), nullable=True),
        sa.Column("audio_analysis", sa.JSON(), nullable=True),
        sa.Column("face_detections", sa.JSON(), nullable=True),
        sa.Column("emotion_analysis", sa.JSON(), nullable=True),
        sa.Column("text_detections", sa.JSON(), nullable=True),
        sa.Column("object_detections", sa.JSON(), nullable=True),
        sa.Column("processing_time", sa.Float(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("analyzed_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_videos_id"), "videos", ["id"], unique=False)
    op.create_table(
        "cutting_plans",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("cuts_data", sa.JSON(), nullable=False),
        sa.Column("export_settings", sa.JSON(), nullable=True),
        sa.Column("is_ai_generated", sa.Boolean(), nullable=True),
        sa.Column("confidence_score", sa.Float(), nullable=True),
        sa.Column("ai_model_version", sa.String(length=50), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "DRAFT",
                "APPROVED",
                "PROCESSING",
                "COMPLETED",
                "FAILED",
                name="cuttingplanstatus",
                native_enum=False,
            ),
            nullable=True,
        ),
        sa.Column("processing_progress", sa.Float(), nullable=True),
        sa.Column("estimated_output_duration", sa.Float(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("video_id", sa.Integer(), nullable=False),
        sa.Column("created_by_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("approved_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.ForeignKeyConstraint(
            ["video_id"],
            ["videos.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_cutting_plans_id"), "cutting_plans", ["id"], unique=False)
    op.create_table(
        "export_jobs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "output_format",
            sa.Enum(
                "MP4", "MOV", "WEBM", "AVI", name="exportformat", native_enum=False
            ),
            nullable=False,
        ),
        sa.Column("resolution", sa.String(length=20), nullable=False),
        sa.Column(
            "quality",
            sa.Enum(
                "LOW",
                "MEDIUM",
                "HIGH",
                "ULTRA",
                name="exportquality",
                native_enum=False,
            ),
            nullable=False,
        ),
        sa.Column("fps", sa.Float(), nullable=True),
        sa.Column("bitrate", sa.Integer(), nullable=True),
        sa.Column("output_filename", sa.String(length=255), nullable=True),
        sa.Column("output_path", sa.String(length=500), nullable=True),
        sa.Column("output_size", sa.BigInteger(), nullable=True),
        sa.Column("download_url", sa.String(length=500), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "QUEUED",
                "PROCESSING",
                "COMPLETED",
                "FAILED",
                "CANCELLED",
                name="exportstatus",
                native_enum=False,
            ),
            nullable=True,
        ),
        sa.Column("progress", sa.Float(), nullable=True),
        sa.Column("current_step", sa.String(length=100), nullable=True),
        sa.Column("processing_time", sa.Float(), nullable=True),
        sa.Column("estimated_completion", sa.DateTime(timezone=True), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("retry_count", sa.Integer(), nullable=True),
        sa.Column("max_retries", sa.Integer(), nullable=True),
        sa.Column("cutting_plan_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["cutting_plan_id"],
            ["cutting_plans.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_export_jobs_id"), "export_jobs", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_export_jobs_id"), table_name="export_jobs")
    op.drop_table("export_jobs")
    op.drop_index(op.f("ix_cutting_plans_id"), table_name="cutting_plans")
    op.drop_table("cutting_plans")
    op.drop_index(op.f("ix_videos_id"), table_name="videos")
    op.drop_table("videos")
    op.drop_index(op.f("ix_projects_id"), table_name="projects")
    op.drop_table("projects")
    # ### end Alembic commands ###
